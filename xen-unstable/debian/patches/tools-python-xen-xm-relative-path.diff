--- xen-unstable.orig/tools/python/xen/xm/create.py
+++ xen-unstable/tools/python/xen/xm/create.py
@@ -534,6 +534,14 @@
     else:
         return s
 
+def abspath(file, dir):
+    if file[0] == '/':
+        return file
+
+    import xen.util.auxbin
+    path = xen.util.auxbin.root()
+    return os.path.join(path, dir, file)
+
 def configure_image(vals):
     """Create the image config.
     """
@@ -541,9 +549,9 @@
         return None
     config_image = [ vals.builder ]
     if vals.kernel:
-        config_image.append([ 'kernel', os.path.abspath(vals.kernel) ])
+        config_image.append([ 'kernel', abspath(vals.kernel, 'boot') ])
     if vals.ramdisk:
-        config_image.append([ 'ramdisk', os.path.abspath(vals.ramdisk) ])
+        config_image.append([ 'ramdisk', abspath(vals.ramdisk, 'boot') ])
     if vals.cmdline_ip:
         cmdline_ip = strip('ip=', vals.cmdline_ip)
         config_image.append(['ip', cmdline_ip])
@@ -717,7 +725,7 @@
 def configure_hvm(config_image, vals):
     """Create the config for HVM devices.
     """
-    args = [ 'device_model', 'pae', 'vcpus', 'boot', 'fda', 'fdb',
+    args = [ 'pae', 'vcpus', 'boot', 'fda', 'fdb',
              'localtime', 'serial', 'stdvga', 'isa', 'nographic', 'soundhw',
              'vnc', 'vncdisplay', 'vncunused', 'vncconsole', 'vnclisten',
              'sdl', 'display', 'xauthority', 'rtc_timeoffset', 'monitor',
@@ -725,6 +733,8 @@
     for a in args:
         if a in vals.__dict__ and vals.__dict__[a] is not None:
             config_image.append([a, vals.__dict__[a]])
+    if vals.device_model is not None:
+        config_image.append([ 'device_model', abspath(vals.device_model, 'bin') ])
     if vals.vncpasswd is not None:
         config_image.append(['vncpasswd', vals.vncpasswd])
 
